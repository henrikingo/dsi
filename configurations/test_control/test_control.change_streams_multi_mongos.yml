task_name: change_streams
run:
  - id: change_streams_multi_mongos
    type: mongoshell

    cmd: cd workloads && ${infrastructure_provisioning.numactl_prefix} ./run_workloads.py -c workloads.yml
    config_filename: workloads.yml  # The name used in previous row
    workload_config:
      tests:
        default:
          - change_streams_crud_throughput.js:
              thread_levels: [60]
              listener_levels: [15]
              update_lookup: false
              selective_change: false
              nb_collections: 1
              mongos_hosts: ${infrastructure_provisioning.out.mongos}
          - change_streams_latency.js:
              thread_levels: [60]
              listener_levels: [15]
              update_lookup: false
              selective_change: false
              nb_collections: 1
              mongos_hosts: ${infrastructure_provisioning.out.mongos}
          - cpu_noise.js

      # These next five lines match existing workloads.yml.
      target: ${mongodb_setup.meta.hostname}
      port: ${mongodb_setup.meta.port}
      # Hard coding for now. These aren't working right now
      sharded: ${mongodb_setup.meta.is_sharded}
      replica: ${mongodb_setup.meta.is_replset}
    pre_test:
      - on_workload_client:
          upload_files:
            - source: workloads.yml
              target: workloads/workloads.yml
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: workloads/workload_timestamps.csv
              target: ../workloads_timestamps.csv

  - id: fio
    type: fio
    cmd: '${infrastructure_provisioning.numactl_prefix} ./fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    workload_config: ${test_control.common_fio_config}
    skip_validate: true
    pre_test:
      - on_workload_client:
          upload_files:
            - source: fio.ini
              target: fio.ini
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: fio.json
              target: ../fio.json

  - id: iperf
    type: iperf
    cmd: '${infrastructure_provisioning.numactl_prefix} ./iperf-test.sh ${mongodb_setup.meta.hostname}'
    skip_validate: true
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: iperf.json
              target: ../iperf.json
