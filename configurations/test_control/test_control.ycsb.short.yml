task_name: ycsb.short
run:
  - id: ycsb_load
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb load mongodb -s -P workloads/workloadShort -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 32; sleep 1"
    config_filename: workloadShort
    workload_config: |
      recordcount=2500000
      operationcount=3000000
      workload=com.yahoo.ycsb.workloads.CoreWorkload
      readallfields=true
      readproportion=0.5
      updateproportion=0.5
      scanproportion=0
      insertproportion=0.0
      requestdistribution=zipfian
    pre_test:
      - on_workload_client:
          upload_files:
            - source: workloadShort
              target: YCSB/ycsb-mongodb/workloads/workloadShort
  - id: ycsb_50read50update
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s -P workloads/workloadShort -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 64; sleep 1"

pre_task:
  - on_workload_client:
      exec_mongo_shell:
        connection_string: "${mongodb_setup.meta.hostname}:${mongodb_setup.meta.port}"
        # Shard the YCSB cluster if sharding is enabled
        script: |
          if ("${mongodb_setup.meta.is_sharded}" == "True") {
            assert.commandWorked(sh.enableSharding("ycsb"));
            assert.commandWorked(
              sh.shardCollection("ycsb.usertable", {_id: "hashed"}));
            db.printShardingStatus();
          } else {
            print ("Non-sharded cluster");
          }

between_tests:
  - restart_mongodb:
      clean_logs: true
      clean_db_dir: false
