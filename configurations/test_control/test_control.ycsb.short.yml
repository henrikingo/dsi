task_name: ycsb.short
run:
  - id: ycsb_load
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb load mongodb -s -P ../../workloadShort -p mongodb.url=${mongodb_setup.meta.mongodb_url} -threads 32"
    config_filename: workloadShort
    workload_config: |
      recordcount=2500000
      operationcount=3000000
      workload=com.yahoo.ycsb.workloads.CoreWorkload
      readallfields=true
      readproportion=0.5
      updateproportion=0.5
      scanproportion=0
      insertproportion=0.0
      requestdistribution=zipfian

  - id: ycsb_50read50update
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s -P ../../workloadShort -p mongodb.url=${mongodb_setup.meta.mongodb_url} -threads 64"

pre_task:
  - on_workload_client:
      exec_mongo_shell:
        connection_string: "${mongodb_setup.meta.hostname}:${mongodb_setup.meta.port}"
        # Shard the YCSB cluster if sharding is enabled
        script: |
          if ("${mongodb_setup.meta.is_sharded}" == "True") {
            // Temporary fix for BF-8489.
            // If do not sleep before executing sharding commands when auth is enabled, these
            // commands may fail.
            if ("${bootstrap.authentication}" == "enabled") {
              sleep(2000);
            }
            assert.commandWorked(sh.enableSharding("ycsb"));
            assert.commandWorked(
              sh.shardCollection("ycsb.usertable", {_id: "hashed"}));
            db.printShardingStatus();
          } else {
            print ("Non-sharded cluster");
          }

between_tests:
  - restart_mongodb:
      clean_logs: true
      clean_db_dir: false
