task_name: ycsb.noise_test

# Disable jstest validations, they'll fail if run repeatedly on same dir
jstests_dir: ""

run:
  # 5x fio tests ###########################################################################
  # If PERF-1192 is implemented, using yaml templates to repeat a test will stop working,
  # as ids will not be unique.
  - &fio
    id: fio-${mongodb_setup.mongod_config_file.storage.engine}
    type: mongoshell
    cmd: './fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    workload_config: ${test_control.common_fio_config}
    pre_test:
      - on_workload_client:
          upload_files:
            - source: fio.ini
              target: fio.ini
    # Note that the next fio.json file overwrites the previous one, so you only get the last
    # This is harmless, as the file isn't really used for anything.
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: fio.json
              target: ../fio.json
  - *fio
  - *fio
  - *fio
  - *fio

  # 5x ycsb load tests #########################################################################
  - &ycsb_load
    id: ycsb_load-${mongodb_setup.mongod_config_file.storage.engine}
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ./bin/ycsb load mongodb -s -P workloads/workloadEvergreen -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 32; sleep 1"
    pre_test:
      - on_workload_client:
          upload_files:
            - source: workloadEvergreen
              target: YCSB/ycsb-mongodb/workloads/workloadEvergreen
  - &ycsb_load_cleanup
    id: ycsb_load-cleanup
    type: mongoshell
    cmd: '~/bin/mongo ${mongodb_setup.meta.hostname}/ycsb --eval "db.dropDatabase()" && echo ">>> ycsb_cleanup_dummy_entry :      1.0 1"'
  - *ycsb_load
  - *ycsb_load_cleanup
  - *ycsb_load
  - *ycsb_load_cleanup
  - *ycsb_load
  - *ycsb_load_cleanup
  - *ycsb_load
  - *ycsb_load_cleanup

  # 5x ycsb 100read tests #########################################################################
  - &ycsb_100read
    id: ycsb_100read-${mongodb_setup.mongod_config_file.storage.engine}
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ./bin/ycsb run mongodb -s -P workloads/workloadEvergreen -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 64; sleep 1"
  - *ycsb_100read
  - *ycsb_100read
  - *ycsb_100read
  - *ycsb_100read

  # 5x ycsb 95-5 tests #########################################################################
  - &ycsb_95read5update
    id: ycsb_95read5update-${mongodb_setup.mongod_config_file.storage.engine}
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ./bin/ycsb run mongodb -s -P workloads/workloadEvergreen_95read5update -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 64; sleep 1"
    pre_test:
      - on_workload_client:
          upload_files:
            - source: workloadEvergreen_95read5update
              target: YCSB/ycsb-mongodb/workloads/workloadEvergreen_95read5update
  - *ycsb_95read5update
  - *ycsb_95read5update
  - *ycsb_95read5update
  - *ycsb_95read5update

  # 5x ycsb 50-50 tests #########################################################################
  - &ycsb_50read50update
    id: ycsb_50read50update-${mongodb_setup.mongod_config_file.storage.engine}
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ./bin/ycsb run mongodb -s -P workloads/workloadEvergreen_50read50update -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 64; sleep 1"
    pre_test:
      - on_workload_client:
          upload_files:
            - source: workloadEvergreen_50read50update
              target: YCSB/ycsb-mongodb/workloads/workloadEvergreen_50read50update
  - *ycsb_50read50update
  - *ycsb_50read50update
  - *ycsb_50read50update
  - *ycsb_50read50update

between_tests:
  - restart_mongodb:
      clean_logs: true
      clean_db_dir: false
