task_name: initialsync-logkeeper
run:
  - id: benchRun
    type: shell
    cmd: cd workloads && ${infrastructure_provisioning.numactl_prefix} ./run_workloads.py -c workloads.yml
    background_tasks:
        background_traffic: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/media/ephemeral0/ ./mongoreplay play -p /media/ephemeral0/playback.bson --host mongodb://${mongodb_setup.meta.hosts} --no-preprocess
    config_filename: workloads.yml  # The name used in previous row
    workload_config:
        ########################################################################
        # Test lists. Command line will indicate which list of tests to execute.
        # The 'default' list is the default.
        # When testing new test workloads, please put your tests in the
        # tests.test list, and remove the existing hello.js
        ########################################################################
        tests:
            initialsync-logkeeper:
                - large_initialsync.js
            test:
              -  #  Empty list. Put new workloads here for testing
            short:  # Just does Hello World
              - hello.js:
                  parameter1: foo
                  parameter2: [true, false]

        # These next five lines match existing
        # workloads.yml. Workloads needs to be updated to consume from
        # mongo entry.
        target: ${mongodb_setup.meta.hostname}
        port: ${mongodb_setup.meta.port}
        # Hard coding for now. These aren't working right now
        sharded: ${mongodb_setup.meta.is_sharded}
        replica: ${mongodb_setup.meta.is_replset}
        scale_factor: ${mongodb_setup.meta.primaries}
        test_list: initialsync-logkeeper

# Disable jstest validations, it just takes too long to run it for this test.
jstests_dir: ""
mc:
  monitor_interval: 60

pre_task:
  - on_localhost:
      exec: $DSI_PATH/bin/setup-workloads.sh
  - on_workload_client:
      exec: rm -rf workloads*
  - on_workload_client:
      # no order is guaranteed between the two upload files. That is okay here
      upload_files:
        workloads.tar.gz: workloads.tar.gz
  - on_workload_client:
      exec: |
        rm -rf workloads
        mkdir workloads
        tar zxvf workloads.tar.gz -C workloads
        curl -O --retry 10 https://s3.amazonaws.com/mciuploads/mongo-tools/binaries/mongo_tools_ubuntu_b3187697d342563efd9b90bdd1aa574aec4d2e00_16_12_08_22_07_30/community/mongoreplay
        chmod +x mongoreplay
        curl -o /media/ephemeral0/initialsync.playback.tgz --retry 10 https://s3-us-west-2.amazonaws.com/dsi-donot-remove/initialsync.playback.tgz
        curl -o /media/ephemeral0/libpcap.so.0.8  --retry 10 https://s3-us-west-2.amazonaws.com/dsi-donot-remove/libpcap/libpcap.so.0.8
        cd /media/ephemeral0
        tar zxvf initialsync.playback.tgz
  - on_workload_client:
      upload_files:
        workloads.yml: workloads/workloads.yml
post_task:
  - on_workload_client:
      exec: |
        killall -9 mongoreplay
        killall -9 mongoreplay
  - on_workload_client:
      retrieve_files:
        workloads/workload_timestamps.csv: ../workloads_timestamps.csv
