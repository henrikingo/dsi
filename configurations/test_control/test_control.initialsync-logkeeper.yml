# The logkeeper tests use a snapshot of seeded data. Periodically, usually when a new major version becomes available,
# the snapshot needs to be updated. The most common update that needs to be  performed relates to the feature
# Compatibility Version.
#
# The following procedure is based on https://docs.google.com/document/d/14QXOmo-ia8w72pW5zqQ2fCWfXEwiVQ8_1EoMCkB4baY/,
# it is assumed that you have run DSI locally once and have everything else (ssh keys etc.) configured correctly.
#
# The full instructions can be found in https://docs.google.com/document/d/1qMH1ekgnqm5LfVp7pXsHSoUqfobgStdzMKgbj5Codh0
#
# Note: a shell command with a '$ ' prompt is run on your local host, commands on a remote host will
# have a shell prompt like '[ec2-user@ip-10-2-0-190 ~]$ '.
#
# 1) create a bootstrap.yml with the following values set:
#     mongodb_setup: initialsync-logkeeper
#     storageEngine: wiredTiger
#     test_control: initialsync-logkeeper
#     task_name: initialsync-logkeeper
#
# Note: it may also be necessary to set 'mongodb_binary_archive' in your bootstrap.yml. For an FCV change, the current
# default is most likely to work. For other changes, it may be necessary to get a mongod archive tarball from the
# waterfall compilation task page.
# Note: Unlike other configurations, mongod.1 is currently the master of this replica set.
#
# 2) On your local host, execute the following shell commands:
#
#  $ git clone git@github.com:10gen/dsi.git
#  $ cd dsi
#  $ bin/bootstrap.py --directory WORK --bootstrap-file bootstrap.yml
#  $ cd WORK
#  $ source dsienv.sh
#  $ sed 's/sudo fio --filename=/# sudo fio --filename=/'  ../clusters/remote-scripts/system-setup.sh -i.bak # disable the disk warmup or you may have to wait for over 4 hours
#  $ infrastructure_provisioning.py
#  $ mongodb_setup.py
#  $ conn.py mongod.1
#
# 3) At this point, you should have an AWS command prompt. On the AWS host run the following commands:
# *Note:* lines without a prompt display the expected output, but the exact details may vary in your output.
#
# [ec2-user@ip-10-2-0-190 ~]$ mongo --quiet --eval 'printjson(db.adminCommand({getParameter: 1, featureCompatibilityVersion: 1}))'
# { "featureCompatibilityVersion" : { "version" : "3.6" }, "ok" : 1 }
#
# [ec2-user@ip-10-2-0-190 ~]$ mongo --eval 'printjson(db.adminCommand( { setFeatureCompatibilityVersion: '4.0' } ))'
# { "ok" : 1 }
#
# [ec2-user@ip-10-2-0-190 ~]$ mongo --eval 'db.shutdownServer()'
#
# 4) At this point, you will have updated the FeatureCompatibilityVersion but the database will also contain a local
# database (rs.intitiate() was called by mongodb_setup.py). Before creating a new snapshot, the local database
# must be removed. This step can only be run when the mongod process is not started as a replica set member. This is
# why the mongod command does not contain the '--replSet' flag.
#
# [ec2-user@ip-10-2-0-190 ~]$ mongo admin --eval 'db.shutdownServer ()'
# [ec2-user@ip-10-2-0-190 ~]$ mongod --dbpath data/dbs --logpath data/logs/mongod.log --port 27017 --fork
# [ec2-user@ip-10-2-0-190 ~]$ mongo --db local --eval 'db.dropDatabase()'
# [ec2-user@ip-10-2-0-190 ~]$ mongo --eval 'db.shutdownServer()'
# [ec2-user@ip-10-2-0-190 ~]$ echo "$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
# 54.161.124.154
#
# 5) Note the ip address (it will be different for you) and disconnect from the AWS host. We will now create the
# snapshot from your localhost
#
# $ aws ec2 describe-instances  --filters "Name=ip-address,Values=54.161.124.154"  --region us-east-1 --query 'Reservations[*].Instances[*].[InstanceId,BlockDeviceMappings]'  --output text
# i-0e4446bd54b582f19
# /dev/xvda
# EBS	2018-03-13T17:14:21.000Z	True	attached	vol-048f323f57825b73e
# /dev/sde
# EBS	2018-03-13T17:14:21.000Z	True	attached	vol-0f7353dc40f2883b9
#
# $ aws ec2 describe-volumes --volume-ids vol-0f7353dc40f2883b9 vol-048f323f57825b73e  --region us-east-1 --query 'Volumes[*].[VolumeId,Size]'  --output text
# vol-048f323f57825b73e	8
# vol-0f7353dc40f2883b9	1024
#
# 6) From the previous list select the vol with a size of 1024 (vol-0f7353dc40f2883b9 in this case). Create the new
# snapshot with the following command:
#
# $ aws ec2 create-snapshot --region us-east-1 --volume-id vol-0f7353dc40f2883b9  --description 'BF-XXXX: some descriptive text'  --query 'SnapshotId'  --output text
# snap-<XXXXYYYY>
#
# 7) using the outputted snapshot id, update the AWS Name:
#
# $ aws ec2 create-tags --resources snap-XXXXYYYY --tags Key=Name,Value=initialsync_1tb   --region us-east-1
#
# 8) Finally, update the value of mongod_seeded_ebs_snapshot_id in infrastructure_provisioning.initialsync-logkeeper.yml.
#
task_name: initialsync-logkeeper
run:
  - id: benchRun
    type: mongoshell
    cmd: cd workloads && ${infrastructure_provisioning.numactl_prefix} ./run_workloads.py -c ../workloads.yml
    background_tasks:
      background_traffic: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/media/ephemeral0/ ./mongoreplay play -p /media/ephemeral0/playback.bson --host mongodb://${mongodb_setup.meta.hosts} --no-preprocess
    config_filename: workloads.yml  # The name used in previous row
    output_files:
      - workloads/workload_timestamps.csv
    workload_config:
      tests:
        initialsync-logkeeper:
          - large_initialsync

      target: ${mongodb_setup.meta.hostname}
      port: ${mongodb_setup.meta.port}
      sharded: ${mongodb_setup.meta.is_sharded}
      replica: ${mongodb_setup.meta.is_replset}
      scale_factor: ${mongodb_setup.meta.primaries}
      test_list: initialsync-logkeeper

# Disable jstest validations, it just takes too long to run it for this test.
jstests_dir: ""

pre_task:
  - on_workload_client:
      exec: |
        curl -O --retry 10 -fsS https://s3.amazonaws.com/mciuploads/mongo-tools/binaries/mongo_tools_ubuntu_b3187697d342563efd9b90bdd1aa574aec4d2e00_16_12_08_22_07_30/community/mongoreplay
        chmod +x mongoreplay
        curl -o /media/ephemeral0/initialsync.playback.tgz --retry 10 -fsS https://s3-us-west-2.amazonaws.com/dsi-donot-remove/initialsync.playback.tgz
        curl -o /media/ephemeral0/libpcap.so.0.8  --retry 10 -fsS https://s3-us-west-2.amazonaws.com/dsi-donot-remove/libpcap/libpcap.so.0.8
        cd /media/ephemeral0
        tar zxf initialsync.playback.tgz
