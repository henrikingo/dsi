task_name: big_update
run:
  - id: BigUpdate
    type: genny
    cmd: |
      set -eou pipefail
      ./genny/build/src/driver/genny ./genny/src/driver/test/BigUpdate.yml -u "${mongodb_setup.meta.mongodb_url}" -m csv -o ./genny-perf.csv
      genny-metrics-to-perf-json < ./genny-perf.csv > ./genny-perf.json
    output_files:
      # Genny output-parser only parses the first file (must be the json)
      # but we want to retrieve the .csv for the reports dir.
      - genny-perf.json
      - genny-perf.csv
  - id: benchRun
    type: mongoshell

    # This line to be shortened after the config file is copied from below into the production server.
    cmd: cd workloads && ${infrastructure_provisioning.numactl_prefix} ./run_workloads.py -c ../workloads.yml
    config_filename: workloads.yml  # The name used in previous row
    output_files:
      - workloads/workload_timestamps.csv
    workload_config:
      tests:
        default:
          - cpu_noise
      # These next five lines match existing workloads.yml.
      target: ${mongodb_setup.meta.hostname}
      port: ${mongodb_setup.meta.port}
      # Hard coding for now. These aren't working right now
      sharded: ${mongodb_setup.meta.is_sharded}
      replica: ${mongodb_setup.meta.is_replset}

  - id: fio
    type: fio
    cmd: '${infrastructure_provisioning.numactl_prefix} ./fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    output_files:
      - fio.json
      - fio_results.tgz
    workload_config: ${test_control.common_fio_config}
    skip_validate: true

  - id: iperf
    type: iperf
    output_files:
      - iperf.json
    cmd: '${infrastructure_provisioning.numactl_prefix} ./iperf-test.sh ${mongodb_setup.meta.hostname}'
    skip_validate: true

pre_task:
  # remove existing output file (if any) since genny appends
  - on_workload_client:
      exec: |
       rm -f ./genny-perf.csv ./genny-perf.json
  - on_workload_client:
      # Drop the database before each run
      exec_mongo_shell:
        connection_string: "${mongodb_setup.meta.mongodb_url}"
        script: |
          db.dropDatabase();
