task_name: ycsb.longevity
run:
  - id: ycsb_load
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb load mongodb -s -P workloads/workloadLongevity -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 32; sleep 1"
    config_filename: workloadLongevity
    workload_config: |
      recordcount=50000000
      operationcount=2000000000
      workload=com.yahoo.ycsb.workloads.CoreWorkload
      readallfields=true
      readproportion=0.5
      updateproportion=0.5
      scanproportion=0
      insertproportion=0.0
      requestdistribution=zipfian
    pre_test:
      - on_workload_client:
          upload_files:
            workloadLongevity: YCSB/ycsb-mongodb/workloads/workloadLongevity
  - id: ycsb_50read50update
    type: ycsb
    "cmd": "cd YCSB/ycsb-mongodb; ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s -P workloads/workloadLongevity -p mongodb.url=mongodb://${mongodb_setup.meta.hosts}/ycsb -threads 64 -p maxexecutiontime=86400; sleep 1"
  - id: fio
    type: shell
    cmd: ' ${infrastructure_provisioning.numactl_prefix} ./fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    workload_config: ${test_control.common_fio_config}
    pre_test:
      - on_workload_client:
          upload_files:
            fio.ini: fio.ini
  - id: iperf
    type: shell
    cmd: '${infrastructure_provisioning.numactl_prefix} ./iperf-test.sh ${mongodb_setup.meta.hostname}'

mc:
  monitor_interval: 10
  per_thread_stats: "no"

pre_task:
  - on_localhost:
      exec: $DSI_PATH/bin/setup-ycsb.sh
  - on_workload_client:
      exec: rm -rf ycsb*
  - on_workload_client:
      upload_files:
        ycsb.tar.gz: ycsb.tar.gz
      upload_repo_files:
        bin/process_fio_results.py: process_fio_results.py
        bin/process_iperf_results.py: process_iperf_results.py
        bin/fio-test.sh: fio-test.sh
        bin/iperf-test.sh: iperf-test.sh
  - on_workload_client:
      exec: |
        rm -rf YCSB
        mkdir YCSB
        tar zxvf ycsb.tar.gz -C YCSB
        export JAVA_HOME="/usr/java/jdk1.7.0_71/jre"
        source /etc/profile.d/maven.sh && cd /home/ec2-user/YCSB/ycsb-mongodb && mvn clean package
      exec_mongo_shell:
        connection_string: "${mongodb_setup.meta.hostname}:${mongodb_setup.meta.port}"
        # Shard the YCSB cluster if sharding is enabled
        script: |
          if ("${mongodb_setup.meta.is_sharded}" == "True") {
             assert.commandWorked(sh.enableSharding("ycsb"));
             assert.commandWorked(
                sh.shardCollection("ycsb.usertable", {_id: "hashed"}));
             db.printShardingStatus();
          } else {
            print ("Non-sharded cluster");
          }
  - on_all_hosts:
      # Install iperf. It isn't available in yum on AWS instances
      exec: |
        sudo killall iperf3
        rm -rf iperf
        git clone https://github.com/esnet/iperf
        cd iperf/
        git checkout d06415822a
        ./configure
        make
        sudo make install
post_task:
  - on_workload_client:
      retrieve_files:
        fio.json: ../fio.json
        iperf.json: ./reports/iperf.json

numactl: ""
