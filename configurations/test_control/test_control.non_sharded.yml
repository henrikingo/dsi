run:
  - id: benchRun-${mongodb_setup.mongod_config_file.storage.engine}
    type: shell

    # This line to be shortened after the config file is copied from below into the production server.
    cmd: cd workloads && ${test_control.numactl} ./run_workloads.py -c workloads.yml
    config_filename: workloads.yml  # The name used in previous row
    workload_config:
        ########################################################################
        # Test lists. Command line will indicate which list of tests to execute.
        # The 'default' list is the default.
        # When testing new test workloads, please put your tests in the
        # tests.test list, and remove the existing hello.js
        ########################################################################
        tests:
            default:
              - insert_capped.js:
                    thread_levels: [1, 2]
              - insert_capped_indexes.js
              - cpu_noise.js
            test:
              -  # Empty list. Put new workloads here for testing
            short:  # Just does Hello World
              - hello.js:
                  parameter1: foo
                  parameter2: [true, false]

        # These next five lines match existing workloads.yml.
        target: ${mongodb_setup.meta.hostname}
        port: ${mongodb_setup.meta.port}
        # Hard coding for now. These aren't working right now
        sharded: ${mongodb_setup.meta.is_sharded}
        replica: ${mongodb_setup.meta.is_replset}
  - id: fio-${mongodb_setup.mongod_config_file.storage.engine}
    type: shell
    cmd: '${test_control.numactl} ./fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    workload_config: ${test_control.common_fio_config}
  - id: iperf
    type: shell
    cmd: '${test_control.numactl} ./iperf-test.sh ${mongodb_setup.meta.hostname}'

pre_task:
  - on_localhost:
      exec: $DSI_PATH/bin/setup-workloads.sh
  - on_workload_client:
      exec: rm -rf workloads*
  - on_workload_client:
      # no order is guaranteed between the two upload files. That is okay here
      upload_files:
        workloads.tar.gz: workloads.tar.gz
      upload_repo_files:
        bin/process_fio_results.py: process_fio_results.py
        bin/process_iperf_results.py: process_iperf_results.py
        bin/fio-test.sh: fio-test.sh
        bin/iperf-test.sh: iperf-test.sh
  - on_workload_client:
      exec: |
        rm -rf workloads
        mkdir workloads
        tar zxvf workloads.tar.gz -C workloads
        chmod 755 fio-test.sh
        chmod 755 iperf-test.sh
  - on_all_hosts:
      # Install iperf. It isn't available in yum on AWS instances
      exec: |
        sudo killall iperf3
        rm -rf iperf
        git clone https://github.com/esnet/iperf
        cd iperf/
        ./configure
        make
        sudo make install
  - on_workload_client:
      upload_files:
        workloads.yml: workloads/workloads.yml
        fio.ini: fio.ini
post_task:
  - on_workload_client:
      retrieve_files:
        workloads/workload_timestamps.csv: ../workloads_timestamps.csv
        fio.json: ../fio.json
        iperf.json: ../iperf.json
