task_name: ycsb-wmajority
run:
  - id: ycsb_load
    type: ycsb
    cmd: >
      cd YCSB/ycsb-mongodb;
      ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb load mongodb -s
      -P ../../workloadEvergreen
      -threads ${test_control.thread_levels.load.${mongodb_setup.meta.storageEngine}};
    config_filename: workloadEvergreen
    workload_config: |
      mongodb.url=${mongodb_setup.meta.mongodb_url}&w=majority
      recordcount=5000000
      operationcount=20000000
      workload=com.yahoo.ycsb.workloads.CoreWorkload
      readallfields=true
      readproportion=1.0
      updateproportion=0.0
      scanproportion=0
      insertproportion=0.0
      requestdistribution=zipfian

  - id: ycsb_95read5update_w_majority
    type: ycsb
    cmd: >
      cd YCSB/ycsb-mongodb;
      ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s
      -P ../../workloadEvergreen_95read5update
      -threads ${test_control.thread_levels.level95-5.${mongodb_setup.meta.mongodb_setup}};
    config_filename: workloadEvergreen_95read5update
    workload_config: |
      mongodb.url=${mongodb_setup.meta.mongodb_url}&w=majority
      recordcount=5000000
      operationcount=20000000
      workload=com.yahoo.ycsb.workloads.CoreWorkload
      readallfields=true
      readproportion=0.95
      updateproportion=0.05
      scanproportion=0
      insertproportion=0.0
      requestdistribution=zipfian

  - id: ycsb_95read5update_single_w_majority
    type: ycsb
    cmd: >
      cd YCSB/ycsb-mongodb;
      ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s
      -P ../../workloadEvergreen_95read5update
      -threads 1
      -p maxexecutiontime=600;

  - id: ycsb_50read50update_w_majority
    type: ycsb
    cmd: >
      cd YCSB/ycsb-mongodb;
      ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s
      -P ../../workloadEvergreen_50read50update
      -threads ${test_control.thread_levels.level50-50.${mongodb_setup.meta.mongodb_setup}.${mongodb_setup.meta.storageEngine}}
      -p maxexecutiontime=600;
    config_filename: workloadEvergreen_50read50update
    workload_config: |
      mongodb.url=${mongodb_setup.meta.mongodb_url}&w=majority
      recordcount=5000000
      operationcount=20000000
      workload=com.yahoo.ycsb.workloads.CoreWorkload
      readallfields=true
      readproportion=0.5
      updateproportion=0.5
      scanproportion=0
      insertproportion=0.0
      requestdistribution=zipfian

  - id: ycsb_50read50update_single_w_majority
    type: ycsb
    cmd: >
      cd YCSB/ycsb-mongodb;
      ${infrastructure_provisioning.numactl_prefix} ./bin/ycsb run mongodb -s
      -P ../../workloadEvergreen_50read50update
      -threads 1
      -p maxexecutiontime=600

  - id: fio
    type: fio
    cmd: '${infrastructure_provisioning.numactl_prefix} ./fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    output_files:
      - fio.json
    workload_config: ${test_control.common_fio_config}
    skip_validate: true

  - id: iperf
    type: iperf
    cmd: '${infrastructure_provisioning.numactl_prefix} ./iperf-test.sh ${mongodb_setup.meta.hostname}'
    output_files:
      - iperf.json
    skip_validate: true

thread_levels:
  load:
    mmapv1: 256
    wiredTiger: 512
  level50-50:
    shard:
      mmapv1: 512
      wiredTiger: 512
    replica:
      mmapv1: 128
      wiredTiger: 512
  level95-5:
    shard: 128
    replica: 64

between_tests:
  - restart_mongodb:
      clean_logs: true
      clean_db_dir: false

pre_task:
  - on_workload_client:
      exec_mongo_shell:
        connection_string: "${mongodb_setup.meta.hostname}:${mongodb_setup.meta.port}"
        # Shard the YCSB cluster if sharding is enabled
        script: |
          if ("${mongodb_setup.meta.is_sharded}" == "True") {
            // Temporary fix for BF-8489.
            // If do not sleep before executing sharding commands when auth is enabled, these
            // commands may fail.
            if ("${bootstrap.authentication}" == "enabled") {
              sleep(2000);
            }
            assert.commandWorked(sh.enableSharding("ycsb"));
            assert.commandWorked(
              sh.shardCollection("ycsb.usertable", {_id: "hashed"}));
            db.printShardingStatus();
          } else {
            print ("Non-sharded cluster");
          }
