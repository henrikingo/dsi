task_name: retryable_writes
run:
  - id: benchRun
    type: mongoshell

    # This line to be shortened after the config file is copied from below into the production server.
    cmd: cd workloads && ${infrastructure_provisioning.numactl_prefix} ./run_workloads.py -c workloads.yml
    config_filename: workloads.yml  # The name used in previous row
    workload_config:
      ########################################################################
      # Test lists. Command line will indicate which list of tests to execute.
      # The 'default' list is the default.
      # When testing new test workloads, please put your tests in the
      # tests.test list, and remove the existing hello.js
      ########################################################################
      tests:
        default:
          - insert_vector.js:
              thread_levels: ${test_control.thread_levels.insert_vector.${mongodb_setup.meta.mongodb_setup}.${mongodb_setup.meta.storageEngine}}
              retryable_writes: true
          - mix.js:
              thread_levels: [4, 64, 128, 256, 512]
              retryable_writes: true
        test:
          -  # Empty list. Put new workloads here for testing
        short:  # Just does Hello World
          - hello.js:
              parameter1: foo
              parameter2: true

      # These next five lines match existing workloads.yml.
      target: ${mongodb_setup.meta.hostname}
      port: ${mongodb_setup.meta.port}
      # Hard coding for now. These aren't working right now
      sharded: ${mongodb_setup.meta.is_sharded}
      replica: ${mongodb_setup.meta.is_replset}
    pre_test:
      - on_workload_client:
          upload_files:
            - source: workloads.yml
              target: workloads/workloads.yml
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: workloads/workload_timestamps.csv
              target: ../workloads_timestamps.csv

  - id: fio
    type: fio
    cmd: '${infrastructure_provisioning.numactl_prefix} ./fio-test.sh ${mongodb_setup.meta.hostname}'
    config_filename: fio.ini
    workload_config: ${test_control.common_fio_config}
    skip_validate: true
    pre_test:
      - on_workload_client:
          upload_files:
            - source: fio.ini
              target: fio.ini
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: fio.json
              target: ../fio.json

  - id: iperf
    type: iperf
    cmd: '${infrastructure_provisioning.numactl_prefix} ./iperf-test.sh ${mongodb_setup.meta.hostname}'
    skip_validate: true
    post_test:
      - on_workload_client:
          retrieve_files:
            - source: iperf.json
              target: ../iperf.json

# This is just a lookup table. Each test may reference some leaf node here from a test parameter.
thread_levels:
  insert_vector:
    single-replica:
      wiredTiger: [1, 8, 16]
    replica:
      wiredTiger: [1, 8, 16]
    shard:
      wiredTiger: [1, 32, 64]
