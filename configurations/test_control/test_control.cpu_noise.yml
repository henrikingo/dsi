run:
  - id: canary_cpu
    type: shell
    cmd: cd workloads && ./run_remote_workloads.py -c workloads.yml
    config_filename: workloads.yml # The name used in previous row
    workload_config:
        tests:
            default:
              - cpu_noise.js
        # In this case, we want each mongo shell to connect to the mongod/s on its localhost
        target: localhost
        port: 27017
        test_list: default
        # Normally tests are run from a single workload_client (default, when below is missing).
        # In this case, we want run_workloads.py to ssh into each server and run the test locally
        # there. So we pass the list of servers from infrastructure_provisioning.out.
        remote_execution:
            host_list: ${infrastructure_provisioning.out.mongod}
            remote_cmd: cd workloads && ${test_control.numactl} ./run_workloads.py -c workloads.yml
            remote_prefix: mongod

pre_task:
  - on_localhost:
      exec: $DSI_PATH/bin/setup-workloads.sh
  - on_workload_client:
      exec: rm -rf workloads*
  - on_workload_client:
        upload_files:
            workloads.tar.gz: workloads.tar.gz
  - on_workload_client:
      exec: |
        rm -rf workloads
        mkdir workloads
        tar zxvf workloads.tar.gz -C workloads
  - on_workload_client:
        upload_files:
            workloads.yml: workloads/workloads.yml
    # The below is added to run cpu_noise.js on each server node as well
  - on_all_servers:
        upload_files:
            workloads.tar.gz: workloads.tar.gz
  - on_all_servers:
      exec: |
        rm -rf workloads
        mkdir workloads
        tar zxvf workloads.tar.gz -C workloads
  - on_all_servers:
        upload_files:
            workloads.yml: workloads/workloads.yml


post_task:
  - on_workload_client:
      retrieve_files:
        workloads/workload_timestamps.csv: ./reports/workloads_timestamps.csv
    # For running cpu_noise.js on all servers:
  - on_workload_client:
      retrieve_files:
        workloads/remote_workload_timestamps.csv: ./reports/remote_workloads_timestamps.csv
#    This will work after Jim's PERF-713 comes in. The retrieved files need to land in separate dirs.
#  - on_mongod:
#      retrieve_files:
#        workloads/workload_timestamps.csv: workloads_timestamps.csv
