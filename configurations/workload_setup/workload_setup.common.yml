genny:
  - on_localhost:
      checkout_repos:
        - source: git@github.com:mongodb/genny.git
          target: ${bootstrap.genny_dir}
          branch: master
  - on_workload_client:
      upload_files:
        - source: ${bootstrap.genny_dir}
          target: ./genny
  # System Setup
  - on_workload_client:
      exec: |
        set -eou pipefail
        sudo yum update -y > ./yum-update.log
        # https://aws.amazon.com/premiumsupport/knowledge-center/ec2-enable-epel/
        sudo yum install -y https://s3-us-west-2.amazonaws.com/dsi-donot-remove/genny/epel-release-latest-7.noarch.rpm  || true > ./yum-epel-repo.log 2>&1
        sudo yum-config-manager --enable epel > ./yum-epel.log 2>&1
        sudo yum install -y gcc gcc-c++ openssl-devel python36 python3-pip > ./yum-install.log 2>&1
  # Get Genny's distribution
  - on_workload_client:
      exec: |
        set -eou pipefail

        cd genny

        genny_revision="$(git rev-parse HEAD)"
        genny_revision_url="https://s3.amazonaws.com/mciuploads/genny/genny/genny-amazon2-$genny_revision.tgz"
        genny_default_url="https://s3.amazonaws.com/mciuploads/genny/genny/genny-amazon2.tgz"
        genny_custom_url="${bootstrap.genny_custom_url}"

        # Prefer to grab a specific binary archive if we have one
        # Otherwise, attempt to grab the archive for the current revision
        # Finally, fallback to the default archive
        if [[ -n $genny_custom_url ]]; then
            curl -fLSs -o genny.tgz "$genny_custom_url"
            echo "Got custom archive from '$genny_custom_url'"
        elif curl -fLSs -o genny.tgz "$genny_revision_url"; then
            echo "Got revision archive from '$genny_revision_url'"
        else curl -fLSs -o genny.tgz "$genny_default_url"
            echo "Failed to get revision archive, got archive from '$genny_default_url'"
        fi

        tar -zxf genny.tgz
        rm -f genny.tgz

  # Make sure the genny executable is reasonable
  - on_workload_client:
      exec: |
        set -eou pipefail

        ldd genny/bin/genny
        genny/bin/genny --list-actors

  # Build Genny's Python Component
  - on_workload_client:
      exec: |
        cd genny/src/python
        sudo pip3 install .

mongoshell:
  - on_localhost:
      checkout_repos:
        - source: git@github.com:10gen/workloads.git
          target: ${bootstrap.workloads_dir}
  - on_workload_client:
      exec: rm -rf workloads*
  - on_workload_client:
      upload_files:
        - source: ${bootstrap.workloads_dir}
          target: ./workloads
  - on_workload_client:
      exec: |
        sudo pip install argparse python-dateutil pytz

fio:
  - on_workload_client:
      exec: |
        sudo yum -y -q install fio
      upload_repo_files:
        - source: bin/fio-test.sh
          target: fio-test.sh


iperf:
  - on_all_hosts:
      # Install iperf3. It isn't available in yum on AWS instances
      # TODO: This is very verbose. Please change this to yum install from EPEL instead.
      exec: |
        sudo yum groupinstall -y --quiet "Development tools"
        sudo yum install -y --quiet zlib-devel
        sudo killall iperf3
        rm -rf iperf
        git clone --quiet https://github.com/esnet/iperf
        cd iperf/
        git checkout --quiet d06415822a
        ./configure --quiet
        make --quiet
        sudo make install
      upload_repo_files:
        - source: bin/iperf-test.sh
          target: iperf-test.sh

tpcc:
  - on_localhost:
      checkout_repos:
        - source: git@github.com:10gen/py-tpcc.git
          target: ${bootstrap.tpcc_dir}
          branch: 52185e96bf28be6608ea65b61ff1d134b7cb3f13
  - on_workload_client:
      exec: rm -rf tpcc*
  - on_workload_client:
      upload_files:
        - source: ${bootstrap.tpcc_dir}
          target: ./tpcc
  - on_workload_client:
      exec: |
        python -m pip install pymongo==3.7.2 --user

linkbench:
  - on_workload_client:
      exec: |
        ${workload_setup.install_java}

        curl --retry 10 -fsS  \
          https://s3-us-west-2.amazonaws.com/dsi-donot-remove/utils/install_maven.sh | sudo bash
        rm *.rpm || true
# TODO: EVG-3317  modules can only track branches at the moment
# but master ==  f9cca9bcc2c45a409d34584dad49a095d7efccef. If we need to track
# a specific commit then this code will need to be placed back.
#  - on_localhost:
#      checkout_repos:
#        - source: git@github.com:10gen/linkbench.git
#          target: ${bootstrap.linkbench_dir}
#          branch: f9cca9bcc2c45a409d34584dad49a095d7efccef
  - on_workload_client:
      exec: rm -rf linkbench*
  - on_workload_client:
      upload_files:
        - source: ${bootstrap.linkbench_dir}
          target: ./linkbench
  - on_workload_client:
      exec: |
        export JAVA_HOME="/usr/java/jdk1.8.0_162/jre"
        source /etc/profile.d/maven.sh && cd /home/ec2-user/linkbench
        mvn --quiet clean package -DskipTests

ycsb:
  - on_workload_client:
      exec: |
        ${workload_setup.install_java}

        curl --retry 10 -fsS \
          https://s3-us-west-2.amazonaws.com/dsi-donot-remove/utils/install_maven.sh | sudo bash
        rm *.rpm || true
  - on_localhost:
      checkout_repos:
        - source: git@github.com:mongodb-labs/YCSB.git
          target: ${bootstrap.ycsb_dir}
          branch: 9e7888c5009e44a185b135104dd8456eea1deb1e
  - on_workload_client:
      exec: rm -rf ycsb*
  - on_workload_client:
      upload_files:
        - source: ${bootstrap.ycsb_dir}
          target: ./YCSB
  - on_workload_client:
      exec: |
        export JAVA_HOME="/usr/java/jdk1.8.0_162/jre"
        source /etc/profile.d/maven.sh && cd /home/ec2-user/YCSB/ycsb-mongodb && mvn -Dmongo.version=3.8.1 --quiet clean package

install_java: |
  curl -O --retry 10 -fsS \
    https://s3-us-west-2.amazonaws.com/dsi-donot-remove/java/jdk-8u162-linux-x64.rpm
  sudo rpm -i jdk-8u162-linux-x64.rpm
  sudo /usr/sbin/alternatives --install /usr/bin/java java /usr/java/jdk1.8.0_162/bin/java 20000
