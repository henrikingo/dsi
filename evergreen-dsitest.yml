command_type: system

pre:
  - command: shell.track

post:
  - command: shell.cleanup

functions:
  setup_tests:
    - command: git.get_project
      params:
        directory: src
    - command: git.apply_patch
      params:
        directory: src
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          virtualenv ./venv
          source ./venv/bin/activate
          pip install -r requirements-dev.txt
          echo "building credentials file"
          cat > config.yml << END_OF_CREDS
          {
            evergreen: {
              user: "xgen-evg-user",
              api_key: ${evergreen_token},
              ui_server_host: "https://evergreen.mongodb.com"
            },
            github: {
              token: ${github_token}
            }
          }
          END_OF_CREDS

  check_python_formatting:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          source ./venv/bin/activate
          PYTHONPATH=analysis:bin:. python ./testscripts/check_format_python.py

  lint_python_scripts:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          source ./venv/bin/activate
          bash testscripts/lint-python.sh

  lint_yml:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          source ./venv/bin/activate
          bash testscripts/lint-yml.sh

  nosetests:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          source ./venv/bin/activate
          bash testscripts/run-nosetest.sh

  validate_overrides:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          source ./venv/bin/activate
          perf_jira_user="${perf_jira_user}" perf_jira_pw="${perf_jira_pw}" bash testscripts/validate-overrides.sh
#######################################
#               Tasks                 #
#######################################
tasks:
  - name: check_python_formatting
    commands:
      - func: setup_tests
      - func: check_python_formatting
  - name: lint_python_scripts
    commands:
      - func: setup_tests
      - func: lint_python_scripts
  - name: lint_yml
    commands:
      - func: setup_tests
      - func: lint_yml
  - name: nosetests
    commands:
      - func: setup_tests
      - func: nosetests
  - name: validate_overrides
    commands:
      - func: setup_tests
      - func: validate_overrides


#######################################
#            Buildvariants            #
#######################################

buildvariants:
  - name: linux-runner
    display_name: Linux
    run_on:
      - "rhel70-perf-standalone"
    tasks: &dsi_tasks
      - name: check_python_formatting
      - name: lint_python_scripts
      - name: lint_yml
      - name: nosetests
      - name: validate_overrides
  - name: osx-runner
    display_name: OSX
    run_on:
      - "macos-1012"
    tasks: *dsi_tasks
