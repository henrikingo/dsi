custom_groups:
      my_group:                 # We could also allow to specify arbitrary groups of hosts. (post DP2.0 for sure)
        - ip: ${infrastructure_provisioning.out.mongod.0.public_ip}
        - ip: ${infrastructure_provisioning.out.mongod.1.public_ip}

# NOTE: tasks below is not implemented. When implemented it should match behavior of test_control.yml

# Ordered list of steps to take during system setup.
# Each item is guaranteed to complete before the next one
#
# Keys in the list can be on_all_hosts, on_workload_client, on_mongod,
# on_mongos, on_configsvr, on_host, on_servers
tasks:
  - on_all_hosts:
      download_files:             # Download a file from S3 or elsewhere
        - url1
        - url2
  - on_all_hosts:
      upload_files:               # Upload files from the Evergreen runner (where dsi is checked out) to the other hosts
        - remote-scripts/linux-setup-tasks.sh
        - remote-scripts/mount-ebs-drive.sh
  - on_all_hosts:
      exec_remote: |
        ./linux-setup-tasks.sh  # Implementation of upload phase should chmod a+rx as a convenience to user
        ./mount-ebs-drive.sh
  - on_host:                        # Do this on a single host specified by ip
    - ip: ${infrastructure_provisioning.out.mongod.4.public_ip}   # Reference key elsewhere in config
      download_files:  (see above)
      upload_files:    (see above)
      exec_remote:     (see above)
  - on_my_group:                    # This is like on_servers, but for the custom group defined above.
      download_files:  (see above)
      upload_files:    (see above)
      exec_remote:     (see above)
