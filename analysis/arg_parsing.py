"""
Module for setting up `argparse` arguments that are common across several scripts, to avoid code
duplication.
"""

def add_args(arg_parser, *args):
    """
    Set up `arg_parser` (an `argparse.ArgumentParser`) with the arguments corresponding to each of
    the arguments in *args. For instance, `add_args(parser, "reports analysis")` will set up
    `parser` with the argument(s) that reports analysis requires.
    """

    for arg in args:
        if arg == "reports analysis":
            arg_parser.add_argument(
                "--reports-analysis",
                help=(
                    "The argument to this flag should be the reports directory that is recursively"
                    "searched for FTDC, `mongod.log`, etc. files collected from a test runner."))

            arg_parser.add_argument(
                "--perf-file",
                help=(
                    "Modifier for --analyze-logs. If you want to only analyze log messages"
                    "generated during an actual test run, and ignore thoes from test "
                    "setup/transition phases, you can pass in the path to the performance "
                    "results file (probably perf.json) generated by a test runner as an "
                    "argument to this flag, since it contains the necessary test timestamp "
                    "data."))

        else:
            raise ValueError('"{0}" is an unrecognized argument.'.format(arg))
